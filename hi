import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Load the data
file_path = '/content/sales_data.csv'
df = pd.read_csv(file_path)

# Convert 'Date' column to datetime
df['Date'] = pd.to_datetime(df['Date'])

# Aggregate the sales data by month and year
df['Month'] = df['Date'].dt.to_period('M')
monthly_sales = df.groupby('Month')['Total'].sum().reset_index()

# Plot total sales over time
plt.figure(figsize=(24, 6))
plt.plot(monthly_sales['Month'].astype(str), monthly_sales['Total'], marker='o')
plt.title('Total Sales Over Time')
plt.xlabel('Month')
plt.ylabel('Total Sales ($)')
plt.xticks(rotation=45)
plt.grid(True)
plt.show()

# Analyze sales by product and salesperson
product_sales = df.groupby('Product')['Total'].sum().reset_index()
salesperson_sales = df.groupby('Salesperson')['Total'].sum().reset_index()

# Plot sales by product
plt.figure(figsize=(10, 6))
plt.barh(product_sales['Product'], product_sales['Total'], color='skyblue')
plt.title('Total Sales by Product')
plt.xlabel('Total Sales ($)')
plt.ylabel('Product')
plt.show()

# Plot sales by salesperson
plt.figure(figsize=(10, 6))
plt.barh(salesperson_sales['Salesperson'], salesperson_sales['Total'], color='lightgreen')
plt.title('Total Sales by Salesperson')
plt.xlabel('Total Sales ($)')
plt.ylabel('Salesperson')
plt.show()

# Additional analysis - January 2022
jan_2022_sales = df[(df['Date'].dt.year == 2022) & (df['Date'].dt.month == 1)]
print("Total Sales in January 2022: $", jan_2022_sales['Total'].sum())

# Written analysis
# Compare January 2022 with previous months and years
jan_sales_by_year = df[df['Date'].dt.month == 1].groupby(df['Date'].dt.year)['Total'].sum()
print("\nJanuary Sales Comparison by Year:")
print(jan_sales_by_year)

# Suggestions for metrics to monitor sales performance
suggested_metrics = {
    "Monthly Sales Growth Rate": "Percentage increase or decrease in sales compared to the previous month.",
    "Sales by Product Category": "Monitor sales performance of different product categories.",
    "Sales Conversion Rate": "Ratio of the number of sales to the number of leads generated."
}

print("\nSuggested Metrics for Monitoring Sales Performance:")
for metric, description in suggested_metrics.items():
    print(f"{metric}: {description}")

# Convert the 'Date' column to datetime format for easier time-based analysis
df['Date'] = pd.to_datetime(df['Date'])

# Extract the year from the 'Date' column to analyze data on a yearly basis
df['Year'] = df['Date'].dt.year

# Calculate total sales and units sold, grouped by both year and product
year_product_sales = df.groupby(['Year', 'Product'])['Total'].sum().reset_index()
year_product_units = df.groupby(['Year', 'Product'])['Units'].sum().reset_index()

# Determine which salespersons were involved in selling each product by year
salesperson_product_sales = df.groupby(['Year', 'Product', 'Salesperson'])['Total'].sum().reset_index()

# Visualize total sales for each product by year
plt.figure(figsize=(12, 8))
sns.barplot(x='Year', y='Total', hue='Product', data=year_product_sales)
plt.title('Total Sales by Product for Each Year')
plt.xlabel('Year')
plt.ylabel('Total Sales ($)')
plt.legend(title='Product', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.xticks(rotation=45)
plt.show()

# Visualize the number of units sold for each product by year
plt.figure(figsize=(12, 8))
sns.barplot(x='Year', y='Units', hue='Product', data=year_product_units)
plt.title('Units Sold by Product for Each Year')
plt.xlabel('Year')
plt.ylabel('Units Sold')
plt.legend(title='Product', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.xticks(rotation=45)
plt.show()

# Visualize which salespersons were responsible for selling each product by year
plt.figure(figsize=(14, 10))
sns.barplot(x='Year', y='Total', hue='Salesperson', data=salesperson_product_sales)
plt.title('Sales by Salesperson for Each Product by Year')
plt.xlabel('Year')
plt.ylabel('Total Sales ($)')
plt.legend(title='Salesperson', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.xticks(rotation=45)
plt.show()

# Print a summary of the sales data, broken down by product and year
print("Sales by Product and Year:")
print(year_product_sales)

# Print a detailed breakdown of sales by product, year, and salesperson
print("\nSales by Product, Year, and Salesperson:")
print(salesperson_product_sales)

###################################################################

# Convert the 'Date' column to datetime format for easier time-based analysis
df['Date'] = pd.to_datetime(df['Date'])

# Extract the year from the 'Date' column to analyze data on a yearly basis
df['Year'] = df['Date'].dt.year

# Calculate total sales and units sold, grouped by both year and product
year_product_sales = df.groupby(['Year', 'Product'])['Total'].sum().reset_index()
year_product_units = df.groupby(['Year', 'Product'])['Units'].sum().reset_index()

# Determine which salespersons were involved in selling each product by year
salesperson_product_sales = df.groupby(['Year', 'Product', 'Salesperson'])['Total'].sum().reset_index()

# Visualize total sales for each product by year
fig, ax = plt.subplots(figsize=(12, 8))
sns.barplot(x='Year', y='Total', hue='Product', data=year_product_sales, ax=ax)
ax.set_title('Total Sales by Product for Each Year')
ax.set_xlabel('Year')
ax.set_ylabel('Total Sales ($)')
ax.legend(title='Product', bbox_to_anchor=(1.05, 1), loc='upper left')
ax.set_xticklabels(ax.get_xticklabels(), rotation=45)
display_fig(fig, "Total Sales by Product for Each Year")

# Visualize the number of units sold for each product by year
fig, ax = plt.subplots(figsize=(12, 8))
sns.barplot(x='Year', y='Units', hue='Product', data=year_product_units, ax=ax)
ax.set_title('Units Sold by Product for Each Year')
ax.set_xlabel('Year')
ax.set_ylabel('Units Sold')
ax.legend(title='Product', bbox_to_anchor=(1.05, 1), loc='upper left')
ax.set_xticklabels(ax.get_xticklabels(), rotation=45)
display_fig(fig, "Units Sold by Product for Each Year")

# Visualize which salespersons were responsible for selling each product by year
fig, ax = plt.subplots(figsize=(14, 10))
sns.barplot(x='Year', y='Total', hue='Salesperson', data=salesperson_product_sales, ax=ax)
ax.set_title('Sales by Salesperson for Each Product by Year')
ax.set_xlabel('Year')
ax.set_ylabel('Total Sales ($)')
ax.legend(title='Salesperson', bbox_to_anchor=(1.05, 1), loc='upper left')
ax.set_xticklabels(ax.get_xticklabels(), rotation=45)
display_fig(fig, "Sales by Salesperson for Each Product by Year")

# Analysis Summary
print("Sales by Product and Year:")
print(year_product_sales)

# Print a detailed breakdown of sales by product, year, and salesperson
print("\nSales by Product, Year, and Salesperson:")
print(salesperson_product_sales)
